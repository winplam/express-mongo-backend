!function(e){var t={};function r(s){if(t[s])return t[s].exports;var o=t[s]={i:s,l:!1,exports:{}};return e[s].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(s,o,function(t){return e[t]}.bind(null,o));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=16)}([function(e,t){e.exports=require("express")},function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports=require("webpack")},function(e,t){e.exports=require("cookie-parser")},function(e,t){e.exports=require("compression")},function(e,t){e.exports=require("helmet")},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("lodash/extend")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("express-jwt")},function(e,t){e.exports=require("webpack-dev-middleware")},function(e,t){e.exports=require("webpack-hot-middleware")},function(e,t,r){(function(t){const s=r(2),o=r(4),n=process.cwd();e.exports={mode:"development",devtool:"eval-source-map",entry:["webpack-hot-middleware/client?reload=true",s.join(n,"client/main.js")],output:{path:s.resolve(t,"dist"),filename:"bundle.js",publicPath:"/dist/"},module:{rules:[{test:/\.js$/,exclude:/node_modules/,loader:"babel-loader"},{test:/\.(ttf|eot|svg|gif|jpg|png)(\?[\s\S]+)?$/,use:"file-loader"}]},plugins:[new o.HotModuleReplacementPlugin,new o.NoEmitOnErrorsPlugin],resolve:{alias:{"react-dom":"@hot-loader/react-dom"}}}}).call(this,"/")},function(e,t,r){"use strict";r.r(t);var s=r(0),o=r.n(s);r(4),r(13),r(14),r(15);var n=e=>{console.log("---------- production build, devBundle Skipped")},a=r(2),i=r.n(a),u=r(3),d=r.n(u),c=r(5),l=r.n(c),p=r(6),h=r.n(p),f=r(7),m=r.n(f),g=r(8),w=r.n(g),y=r(1),v=r.n(y),x=r(9),b=r.n(x);const j=new v.a.Schema({name:{type:String,trim:!0,required:"Name is required"},email:{type:String,trim:!0,unique:"Email already exists",match:[/.+\@.+\..+/,"Please fill a valid email address"],required:"Email is required"},hashed_password:{type:String,required:"Hashed password is required"},salt:String,updated:Date,created:{type:Date,default:Date.now}});j.virtual("password").set((function(e){this._password=e,this.salt=this.makeSalt(),this.hashed_password=this.encryptPassword(e)})).get((function(){return this._password})),j.path("hashed_password").validate((function(e){this._password&&this._password.length<6&&this.invalidate("password","Password must be at least 6 characters."),this.isNew&&!this._password&&this.invalidate("password","Password is required")}),null),j.methods={authenticate:function(e){return this.encryptPassword(e)===this.hashed_password},encryptPassword:function(e){if(!e)return"";try{return b.a.createHmac("sha1",this.salt).update(e).digest("hex")}catch(e){return""}},makeSalt:function(){return Math.round((new Date).valueOf()*Math.random())+""}};var _=v.a.model("User",j),q=r(10),S=r.n(q);var O=e=>{let t="";if(e.code)switch(e.code){case 11e3:case 11001:t=(e=>{let t;try{let r=e.message.substring(e.message.lastIndexOf(".$")+2,e.message.lastIndexOf("_1"));t=r.charAt(0).toUpperCase()+r.slice(1)+" already exists"}catch(e){t="Unique field already exists"}return t})(e);break;default:t="Something went wrong"}else for(let r in e.errors)e.errors[r].message&&(t=e.errors[r].message);return t};var P=async(e,t)=>{const r=new _(e.body);try{return await r.save(),t.status(200).json({message:"Successfully signed up!"})}catch(e){return t.status(400).json({error:O(e)})}},k=async(e,t,r,s)=>{try{let o=await _.findById(s);if(!o)return t.status("400").json({error:"User not found"});e.profile=o,r()}catch(e){return t.status("400").json({error:"Could not retrieve user"})}},U=(e,t)=>(e.profile.hashed_password=void 0,e.profile.salt=void 0,t.json(e.profile)),E=async(e,t)=>{try{let e=await _.find().select("name email updated created");t.json(e)}catch(e){return t.status(400).json({error:O(e)})}},M=async(e,t)=>{try{let r=e.profile,s=await r.remove();s.hashed_password=void 0,s.salt=void 0,t.json(s)}catch(e){return t.status(400).json({error:O(e)})}},R=async(e,t)=>{try{let r=e.profile;r=S()(r,e.body),r.updated=Date.now(),await r.save(),r.hashed_password=void 0,r.salt=void 0,t.json(r)}catch(e){return t.status(400).json({error:O(e)})}},I=r(11),N=r.n(I),T=r(12),D=r.n(T);var C={env:"production",port:process.env.PORT||3e3,jwtSecret:process.env.JWT_SECRET||"YOUR_secret_key",mongoUri:process.env.MONGODB_URI||process.env.MONGO_HOST||"mongodb://"+(process.env.IP||"localhost")+":"+(process.env.MONGO_PORT||"27017")+"/mernbasesetup"};var H={signin:async(e,t)=>{try{let r=await _.findOne({email:e.body.email});if(!r)return t.status("401").json({error:"User not found"});if(!r.authenticate(e.body.password))return t.status("401").send({error:"Email and password don't match."});const s=N.a.sign({_id:r._id},C.jwtSecret);return t.cookie("t",s,{expire:new Date+9999}),t.json({token:s,user:{_id:r._id,name:r.name,email:r.email}})}catch(e){return t.status("401").json({error:"Could not sign in"})}},signout:(e,t)=>(t.clearCookie("t"),t.status("200").json({message:"signed out"})),requireSignin:D()({secret:C.jwtSecret,userProperty:"auth",algorithms:["HS256"]}),hasAuthorization:(e,t,r)=>{if(!(e.profile&&e.auth&&e.profile._id==e.auth._id))return t.status("403").json({error:"User is not authorized"});r()}};const z=o.a.Router();z.route("/api/users").get(E).post(P),z.route("/api/users/:userId").get(H.requireSignin,U).put(H.requireSignin,H.hasAuthorization,R).delete(H.requireSignin,H.hasAuthorization,M),z.param("userId",k);var A=z;const B=o.a.Router();B.route("/auth/signin").post(H.signin),B.route("/auth/signout").get(H.signout);var G=B;const $=o()();$.use(d.a.json()),$.use(d.a.urlencoded({extended:!0})),$.use(l()()),$.use(h()()),$.use(m()()),$.use(w()()),n($);const W=process.cwd();$.use("/dist",o.a.static(i.a.join(W,"dist"))),$.use("/",A),$.use("/",G),$.use((e,t,r,s)=>{"UnauthorizedError"===e.name?r.status(401).json({error:e.name+": "+e.message}):e&&(r.status(400).json({error:e.name+": "+e.message}),console.log(e))}),$.get("/",(e,t)=>{t.status(200).send('<!doctype html>\n<html lang="en">\n   <head>\n      <meta charset="utf-8">\n      <title>MERN Base Setup</title>\n\x3c!--      <style>--\x3e\n\x3c!--        body {background-color: #0f0f0f;}--\x3e\n\x3c!--      </style>--\x3e\n   </head>\n   <body>\n      <div id="root">Hello World!</div>\n      <script type="text/javascript" src="/dist/bundle.js"><\/script>\n   </body>\n</html>')});var J=$;v.a.connect(C.mongoUri,{useNewUrlParser:!0,useUnifiedTopology:!0,useCreateIndex:!0}).catch(e=>handleError(e)),v.a.connection.on("error",e=>{throw new Error("Unable to connect to database: "+C.mongoUri)}),J.listen(C.port,(function(e){e&&console.log(e),console.info("Server started on http://localhost:%s",C.port)}))}]);